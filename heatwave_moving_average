/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[74.19380474901611, 31.67129215987573],
          [74.19380474901611, 31.334076848686284],
          [74.50142193651611, 31.334076848686284],
          [74.50142193651611, 31.67129215987573]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/

var startdate = ee.Date.fromYMD(2015,1,1);
var enddate = ee.Date.fromYMD(2022,12,31);

// Filter data
var collection = ee.ImageCollection('MODIS/006/MOD11A1')
  .select('LST_Day_1km')
  .filterBounds(geometry)
  .filterDate(startdate, enddate);
  
var join = ee.Join.saveAll({
  matchesKey: 'images'
});

var timeField = 'system:time_start';

var diffFilter = ee.Filter.maxDifference({
  difference: 1000 * 60 * 60 * 24 * 5,
  leftField: timeField, 
  rightField: timeField
});

var threeNeighborJoin = join.apply({
  primary: collection, 
  secondary: collection, 
  condition: diffFilter
})

var smoothed = ee.ImageCollection(threeNeighborJoin.map(function(image) {
  var collection = ee.ImageCollection.fromImages(image.get('images'));
  return ee.Image(image).addBands(collection.min())
  .copyProperties({
        source: image,
        properties: ['system:time_start']
      });
}));

var smoothed_deg = smoothed.map(function(image) {
  return image.multiply(0.02).subtract(273.15)
  .copyProperties({
        source: image,
        properties: ['system:time_start']
      });
}) 


Map.addLayer(smoothed_deg.first().clip(geometry), {}, 'Lowest LST in 5 Days');

print(collection)
print(smoothed_deg)

var chart = ui.Chart.image.series({
  imageCollection: smoothed_deg.select('LST_Day_1km_1'),
  region: geometry,
  reducer: ee.Reducer.median(),
  scale: 1000
}).setOptions({
      lineWidth: 1,
      title: 'LST Time Series',
      interpolateNulls: true,
      vAxis: {title: 'Temperature'},
      hAxis: {title: 'Time', format: 'YYYY-MMM'},
      explorer: {}
    })
print(chart);