var bins = ["0", "200", "400", "600", "800"];

var labels = [
    "No Haard",
    "Low Hazard",
    "Water Deficit",
    "Drought",
    "Severe Drought"
  ];
  
var colors = [
    "#CCCCCC",
    "#FEFF2C",
    "#FF6625",
    "#CC001A",
    "#730009"
  ];

var start = '<RasterSymbolizer>' +
' <ColorMap type="intervals" extended="false" >';

var end =  '</ColorMap>' +
'</RasterSymbolizer>';

var groups = "";

var List = [0,1,2,3,4]//ee.List.sequence(0, colors.length);
print(List);

var i=0;


for (var i in List) {
  var color = colors[i];
  var bin = bins[i];

  var line = '<ColorMapEntry color="' + color + '" quantity="' + bin + '" label=""/>';
  groups = groups + line;
}

print(groups);

// List = List.map(function(n) {
//   var colors_ee = ee.List(colors);
//   var color = colors_ee.get(n);
  
//   var bins_ee = ee.List(bins);
//   var bin = bins_ee.get(i);
//   var line = '<ColorMapEntry color="' + color.getInfo() + '" quantity="' + bin.getInfo() + '" label=""/>';
  
//   console.log(line);
//   i = i + 1;
//   console.log(i);
  
//   return groups = groups + line; //groups += line;
// });

// print(List);

// var collect = function(current, groups) {
//   var colors_ee = ee.List(colors);
//   var color = colors_ee.get(i);
  
//   var bins_ee = ee.List(bins);
//   var bin = bins_ee.get(i);
//   var line = '<ColorMapEntry color="' + color.getInfo() + '" quantity="' + bin.getInfo() + '" label=""/>';
  
//   i = i + 1;
//   return groups + line;
// };

// groups = ee.List(List.iterate(collect, groups));

print(groups);

var intervals = start + groups + end;
print(intervals);

// Define a dictionary which will be used to make legend and visualize image on map
var dict = {
  "names": labels,
  "colors": colors
};
  
  // Create a panel to hold the legend widget
var legend = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});

var title = "Index";
var panel = legend;

// Create and add the legend title.
var legendTitle = ui.Label({
  value: title,
  style: {
    fontWeight: 'bold',
    fontSize: '18px',
    margin: '0 0 4px 0',
    padding: '0'
  }
});
panel.add(legendTitle);

var loading = ui.Label('Loading legend...', {margin: '2px 0 4px 0'});
panel.add(loading);

// Creates and styles 1 row of the legend.
var makeRow = function(color, name) {
  // Create the label that is actually the colored box.
  var colorBox = ui.Label({
    style: {
      backgroundColor: color,
      // Use padding to give the box height and width.
      padding: '8px',
      margin: '0 0 4px 0'
    }
  });

  // Create the label filled with the description text.
  var description = ui.Label({
    value: name,
    style: {margin: '0 0 4px 6px'}
  });

  return ui.Panel({
    widgets: [colorBox, description],
    layout: ui.Panel.Layout.Flow('horizontal')
  });
};

// Get the list of palette colors and class names from the image.
var palette = dict.colors;
var names = dict.names;
loading.style().set('shown', false);

for (var i = 0; i < names.length; i++) {
  panel.add(makeRow(palette[i], names[i]));
}

Map.add(panel);

// get last 10 days
var newDate = new Date();
var today = ee.Date(newDate);
var previous = today.advance(-14, 'day');

// get dataset
var collection = ee.ImageCollection('UTOKYO/WTLAB/KBDI/v1')
  .select('KBDI')
  .filterDate(previous, today)
  .first();


// Map.addLayer(collection, {}, 'Ref')

var styled_img = collection.sldStyle(intervals);

Map.addLayer(styled_img, {}, 'Keetch-Byram Drought Index')