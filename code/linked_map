/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var global_CISI = ee.Image("projects/sat-io/open-datasets/CISI/global_CISI"),
    infrastructure = ee.ImageCollection("projects/sat-io/open-datasets/CISI/amount_infrastructure");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// ######################################### //
// ######    Mulit-variable           ###### //
// ######    Linked Map               ###### //
// ######################################### //

/**
 * This is an example script for linked map
 * 
 */

// import modules 
var palettes = require('users/gena/packages:palettes');
var analysis = require('users/pinkychow1010/WB_IntraUrban:analysis_utils');

// get area of interest: Pakistan
var ADM2 = ee.FeatureCollection(
  'projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/CGAZ_ADM2'
  );
var pakistan = ADM2.filter(ee.Filter.eq('shapeGroup', 'PAK'));

// visualize CI index
var cisi = global_CISI.clip(pakistan);

// arguments for choropleth map
var vector = pakistan; 
var attribute = 'mean';
var palette = palettes.cmocean.Balance[6];
var log = 0;
var class_n = 6;
var title = "Mean";
var opacity = 0.9;

// sample raster values
var zonal = cisi.reduceRegions({
  collection: vector,
  scale: 500,
  reducer:  ee.Reducer.mean()
});

// // call function for choropleth_map
// analysis.choropleth_map(
//   vector=zonal, 
//   attribute=attribute, 
//   palette=palette, 
//   opacity=opacity, 
//   log=log, 
//   class_n=class_n, 
//   title=title
//   );


var vis = {min:0,max:0.2,palette: ['orange','yellow','green','blue']};

// Create a map for each visualization option.
var map1 = ui.Map().set('cursor', 'crosshair');

map1.add(ui.Label('Critical Infrastructure Spatial Index', 
{
  position: 'bottom-center', 
  fontSize: '22px',
  backgroundColor: '#0047AB',
  fontWeight: '500',
  color: 'white'
}
));

map1.addLayer(cisi, vis, 'CISI')
map1.setControlVisibility(true);

var map2 = ui.Map().set('cursor', 'crosshair');

map2.add(ui.Label('Critical Infrastructure Spatial Index', 
{
  position: 'bottom-center', 
  fontSize: '22px',
  backgroundColor: '#0047AB',
  fontWeight: '500',
  color: 'white'
}
));

// call function for choropleth_map
analysis.choropleth_map(
  zonal, 
  attribute, 
  palette, 
  opacity, 
  log, 
  class_n, 
  title,
  map2
  );

map2.setControlVisibility(true);

var linker = ui.Map.Linker([map1, map2]);

// Create a grid of maps.
var mapGrid = ui.Panel(
    [
      ui.Panel([map1], null, {stretch: 'both'}),
      ui.Panel([map2], null, {stretch: 'both'})
    ],
    ui.Panel.Layout.Flow('horizontal'), {stretch: 'both'});

map1.centerObject(pakistan,5);

var mainPanel = ui.Panel(); // side bar
mainPanel.style().set({
    width: '240px',
    backgroundColor: 'black'
  }); // styling main panel

// Add the maps and title to the ui.root.
ui.root.widgets().reset([mainPanel, mapGrid]);
ui.root.setLayout(ui.Panel.Layout.Flow('horizontal'));

// set up title
var title = ui.Label("Comparison Panel");
title.style().set({
    'position':  'top-center',
    'fontSize': '24px',
    'color': 'white',
    'fontWeight': 'bold',
    'fontFamily': 'serif',
    'backgroundColor': 'black',
    'padding': '10px 10px 4px 4px',
    });

// content for main panel
mainPanel.add(title);

// // customized basemap to enhance visuals 
var basemap = require('users/pinkychow1010/WB_IntraUrban:basemap_resources'); 
var new_basemap = basemap.getCustomBasemap('MutedMonotone');

// customized basemap to enhance visuals
map1.setOptions(undefined, {'Custom': new_basemap});
map2.setOptions(undefined, {'Custom': new_basemap});












