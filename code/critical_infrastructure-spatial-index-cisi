/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var global_CISI = ee.Image("projects/sat-io/open-datasets/CISI/global_CISI"),
    infrastructure = ee.ImageCollection("projects/sat-io/open-datasets/CISI/amount_infrastructure");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// ######################################### //
// ######    Critical Infrastructure  ###### //
// ######     Spatial Index           ###### //
// ######################################### //

/**
 * This is an example script for visualizing dataset from awesome gee commmunity
 * on critical infrastructure (CI). It is a gridded raster data layer integrated with
 * global spatial intensity of CI sourcing from the Open Source Map.
 * 
 * This script produce visualization for an area of interest (i.e. Pakistan in this example).
 * 
 * Dataset Source:
 * Nirandjan, Sadhana, Koks, Elco E., Ward, Philip J., & Aerts, Jeroen C.J.H. (2021). A spatially-explicit harmonized global dataset of critical infrastructure (v1.0.0.)
 * [Data set]. Zenodo. https://doi.org/10.5281/zenodo.4957647
 * 
 * Project Details:
 * https://gee-community-catalog.org/projects/cisi/
 * 
 */


// derive country polygon
var ADM2 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/CGAZ_ADM2');

// extract Pakistan polygon
var pakistan = ADM2.filter(ee.Filter.eq('shapeGroup', 'PAK'));

// map layout
Map.setOptions("Hybrid");
Map.centerObject(pakistan, 6);

// derive hospital points
print(infrastructure.aggregate_array('id_no'));
var hospital = infrastructure.filter(ee.Filter.eq('id_no','hospital'));

// visualize CI index
var vis = {min:0,max:0.2,palette: ['orange','yellow','green','blue']};
Map.addLayer(global_CISI.clip(pakistan),vis,'Global CISI');

Map.addLayer(
  hospital.sum().clip(pakistan),
  {min:0,max:50,palette:'aqua'},
  'Hospitals'
  );
