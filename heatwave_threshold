/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[66.82079996674618, 25.077840588506227],
          [66.82079996674618, 24.68416034437003],
          [67.22729410737118, 24.68416034437003],
          [67.22729410737118, 25.077840588506227]]], null, false),
    table = ee.FeatureCollection("projects/ee-pinkychow1010/assets/WB_GEE/karachi_katchi_abadis");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var ds = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE')//.sum();
print(ds);

var max = ds.select('tmmx').reduce(ee.Reducer.percentile([90]), 300).clip(geometry).multiply(0.1);
//print(max)

var start_year = ee.Date("2020-01-01");
var end_year = ee.Date("2021-01-01");

var yearFilter = ee.Filter.date(
  start_year.advance(-1, "year"), 
  end_year.advance(1, "year")
  );


Map.addLayer(max, {
  min: 30, max: 35, palette: ['navy','blue','yellow','red']
}, "P90 Max Temp");

Map.setOptions('HYBRID');
Map.centerObject(geometry, 10)


var startDate = ee.Date.fromYMD(2020, 1, 1)
var endDate = ee.Date.fromYMD(2022, 1, 1) // Exclusive
// var aoi = Map.getBounds(true) // Replace this with your area

var collection = ee.ImageCollection('MODIS/006/MOD11A1')
  .filterBounds(geometry)

var numberOfMonths = endDate.difference(startDate, 'months').floor()
var daysAboveThres = ee.ImageCollection(
  ee.List.sequence(0, numberOfMonths.subtract(1))
    .map(veryHotDays)
)

// print(daysAboveThres.map(getMean))
// Map.addLayer(daysAboveThres.first(), {min: 0, max: 20, palette: 'red,orange,yellow,green,blue,white'}, 'First image')


//receiving the values at pt for each image

var getMean = function(image) {
  // Reducing region and getting value
  var value = ee.Image(image)
    .reduceRegion(ee.Reducer.mean(), geometry)
    .get('LST_Day_1km');
  return value;
};

var count = daysAboveThres.size();

var listOfImages = daysAboveThres.toList(count);

var veryHotDays_list = listOfImages.map(getMean);



function veryHotDays(offset) {
  var date = startDate.advance(offset, 'months');
  return collection
    .select('LST_Day_1km')
    .filterDate(date, date.advance(1, 'months'))
    .map(function (image) {
      var veryHot = image.multiply(0.02).subtract(273.15).gte(35)
      return image.updateMask(veryHot)
    })
    .count()
    .unmask(0)
    .clip(geometry)
    .set('date', date.format('yyyy-MM-dd'))
}
