/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPoint();
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// released under MIT License Copyright Â© 2023 Ka Hei Chow

// import module
var style = require('users/pinkychow1010/WB_IntraUrban:main_style');
var txt = require('users/pinkychow1010/WB_IntraUrban:main_text');
var app = require('users/pinkychow1010/WB_IntraUrban:app_func');

app.set_up(); // map initial set up

// Function to switch from main page to app page
function changeApp(value) {
  var selected_app = selection.getValue(); // get user selection
  main_page.clear(); // remove main page
  
  Map.add(ui.Label({value: selected_app})); // add app title in app page
  app.pop_count(); // action
}

// Initial description (empty)
var desciption_label = ui.Label({value: "", style: style.description});

// Change decription based on the app user selects
function changeDescription(value) {
  desciption_label.setValue(app_dict[value]);
  return(value);
}

// dict for app analysis description
var app_dict = {
  'Land use cover ratio': txt.land_use_cover_ratio,
  'Urban heat analysis': txt.urban_heat,
  'Recent urbanization': txt.recent_urbanization,
  'Population density': txt.population_density,
  'Vegetation cover changes': txt.veg_cover_changes,
  'Urban heat by land use': txt.heat_by_lulc
};

// Drop-down menu for app selection
var selection = ui.Select({
  placeholder: 'Select analysis to begin with...',
  items: Object.keys(app_dict),
  style: style.selection,
  onChange: changeDescription
});

// Config side bar
function createPanel(selection, description_label) {
  
  // app main title
  var title = ui.Label({
    value: 'EO-based Intra-urban Analysis Explorer ðŸŒŽ',
    style: style.title
  });
  
  // headings
  var description = ui.Label({
    value: txt.headings,
    style: style.headings
  });
  
  // set consistent background color for all elements
  selection.style().set('backgroundColor', style.bg_color);
  title.style().set('backgroundColor', style.bg_color);
  description.style().set('backgroundColor', style.bg_color);
  description_label.style().set('backgroundColor', style.bg_color);
  
  // jump to analysis interface
  var start_button = ui.Button({
    label: "Let's go!",
    style: style.start_button,
    onClick: changeApp
  });
  
  // panel for app selection and switch interface
  var app = ui.Panel({
    layout: ui.Panel.Layout.flow('horizontal'),
    style: style.app_panel
  });
  
  app.add(selection);
  app.add(start_button);
  app.style().set('backgroundColor', style.bg_color);
  
  // set layouts
  var content = ui.Panel([
    title, description, app, description_label
    ], null, {stretch:'vertical'});
    
  content.style().set('backgroundColor', style.bg_color);
  
  var page = ui.Panel([content]);
  page.style().set('backgroundColor', style.bg_color);
  return page;
}

// call the main page
var main_page = createPanel(selection, desciption_label);

//ui.root.clear()
ui.root.add(main_page);



