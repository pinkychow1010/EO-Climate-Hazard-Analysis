/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPoint();
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Copyright Â© 2023 Ka Hei Chow

// import module
var palettes = require('users/gena/packages:palettes');
var helper = require('users/pinkychow1010/WB_IntraUrban:helper');
var analysis = require('users/pinkychow1010/WB_IntraUrban:analysis_utils');
var style = require('users/pinkychow1010/WB_IntraUrban:main_style');
var txt = require('users/pinkychow1010/WB_IntraUrban:main_text');
var app = require('users/pinkychow1010/WB_IntraUrban:app_func');

// Map Session:
// get base map for display
var basemap = require('users/pinkychow1010/WB_IntraUrban:basemap_resources');

// config
basemap.addCustomBasemap('MutedMonotone');
Map.setCenter(70, 30, 4.5);

// turn off drawing tool bar
Map.setControlVisibility({
  drawingToolsControl:false
});

// Switch for changing apps
function changeApp(value) {
  var selected_app = selection.getValue();
  main_page.clear();
  //ui.root.clear();
  //ui.root.add(ui.Map());
  basemap.addCustomBasemap('MutedMonotone');
  
  var app_label = ui.Label({value: message_dict[selected_app]});
  Map.add(app_label);
  
  app.pop_count();
}

// Initial description (empty)
var desciption_label = ui.Label({
    value: "",
    style: style.description
  });

// Change decription based on the app user selects
function changeDescription(value) {
  desciption_label.setValue(app_dict[value]);
  return(value);
}

var app_dict = {
  'land_use_cover_ratio': txt.land_use_cover_ratio,
  'urban_heat': txt.urban_heat,
  'recent_urbanization': txt.recent_urbanization,
  'population_density': txt.population_density,
  'veg_cover_changes': txt.veg_cover_changes,
  'heat_by_lulc': txt.heat_by_lulc
};

var message_dict = {
  'land_use_cover_ratio': "Land Use Cover Proportion Analysis",
  'urban_heat': "Urban Heat Island Effect Analysis",
  'recent_urbanization': "Urbanization Trend Analysis",
  'population_density': "Urban Population Analysis",
  'veg_cover_changes': "Vegetation Cover Change Analysis",
  'heat_by_lulc': "Land Use Impact on Urban Heat Analysis"
};

// Drop-down menu for app selection
var selection = ui.Select({
  placeholder: 'Select analysis to begin with...',
  
  items: [
    {value: 'land_use_cover_ratio', label: 'Land use cover ratio'}, 
    {value: 'urban_heat', label: 'Urban Heat Analysis'},
    {value: 'recent_urbanization', label: 'Recent Urbanization'},
    {value: 'population_density', label: 'Population Density'},
    {value: 'veg_cover_changes', label: 'Vegetation Cover Changes'},
    {value: 'heat_by_lulc', label: 'Urban Heat by Land Use'}
  ],
  
  style: style.selection,
  onChange: changeDescription
});

// Config side bar
function createPanel(selection, description_label) {
  
  // app main title
  var title = ui.Label({
    value: 'World Bank Intra-urban Analysis Explorer ðŸŒŽ',
    style: style.title
  });
  
  // headings
  var description = ui.Label({
    value: txt.headings,
    style: style.headings
  });
  
  // set consistent background color for all elements
  selection.style().set('backgroundColor', style.bg_color);
  title.style().set('backgroundColor', style.bg_color);
  description.style().set('backgroundColor', style.bg_color);
  description_label.style().set('backgroundColor', style.bg_color);
  
  // jump to analysis interface
  var start_button = ui.Button({
    label: "Let's go!",
    style: style.start_button,
    onClick: changeApp
  });
  
  // panel for app selection and switch interface
  var app = ui.Panel({
    layout: ui.Panel.Layout.flow('horizontal'),
    style: style.app_panel
  });
  
  app.add(selection);
  app.add(start_button);
  app.style().set('backgroundColor', style.bg_color);
  
  // set layouts
  var content = ui.Panel([
    title, description, app, description_label
    ], null, {stretch:'vertical'});
  
  content.style().set('backgroundColor', style.bg_color);
  
  var page = ui.Panel([
    content
  ]);
  
  page.style().set('backgroundColor', style.bg_color);
  return page;
}

// call the main page
var main_page = createPanel(selection, desciption_label);

//ui.root.clear()
ui.root.add(main_page);



